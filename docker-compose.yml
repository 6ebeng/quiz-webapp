services:
  frontend:
    build:
      context: ./client # Path to your client folder
      dockerfile: Dockerfile
    ports:
      - '4200:4200' # Angular's default port, map it to your host
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    environment: # Add this section
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./server # Path to your server folder
      dockerfile: Dockerfile
    ports:
      - '8080:8080' # Map host port 8080 to container port 8080 (Node.js)
    env_file:
      - ./server/.env
    volumes:
      - ./server/public/app/assets/uploads:/usr/src/app/public/app/assets/uploads
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    entrypoint: /usr/src/app/entrypoint.sh # Use the entrypoint script
    # The command is now handled by the entrypoint.sh
    # If your Dockerfile for the backend had an ENTRYPOINT or CMD,
    # this entrypoint in docker-compose.yml will override it.
    depends_on:
      - mongo
    restart: unless-stopped

  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

volumes:
  mongo-data:
